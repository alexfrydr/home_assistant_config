# -----------------------------------------------------------
# –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
# -----------------------------------------------------------

- alias: "004_System_CPU_Temperature_alarm"
  description: "–¢—Ä–µ–≤–æ–≥–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –¶–ü–£"
  trigger:
    platform: numeric_state
    entity_id: sensor.processor_temperature
    above: 60
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.control_mode
    state: 'on'
  action:
  - data: {}
    service: telegram_bot.send_message
    data_template:
      title: "üéâ *–°–æ–æ–±—â–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã*"
      message: >
        ‚ö†  –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ {{ states('sensor.processor_temperature') }}
  - delay: 00:00:30
  - service: telegram_bot.delete_message
    data:
      chat_id: !secret telegram_bot_allowed_chat_id1
      message_id: last
        
- alias: "004_System_CPU_usage_alarm"
  description: "–¢—Ä–µ–≤–æ–≥–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ø–æ—Ä–æ–≥–∞ —É—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞"
  trigger:
    platform: numeric_state
    entity_id: sensor.processor_use
    above: 90
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.control_mode
    state: 'on'
  action:
  - data: {}
    service: telegram_bot.send_message
    data_template:
      title: "üéâ *–°–æ–æ–±—â–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã*"
      message: >
        ‚ö†  –¢—Ä–µ–≤–æ–≥–∞, –≤—ã—Å–æ–∫–∞—è —É—Ç–∏–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ {{ states('sensor.processor_use') }}
  - delay: 00:00:30
  - service: telegram_bot.delete_message
    data:
      chat_id: !secret telegram_bot_allowed_chat_id1
      message_id: last
    
- alias: "004_System_Disk_usage_alarm"
  description: "–¢—Ä–µ–≤–æ–≥–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ø–æ—Ä–æ–≥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∏—Å–∫–∞"
  trigger:
    platform: numeric_state
    entity_id: sensor.disk_use_percent
    above: 60
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.control_mode
    state: 'on'
  action:
  - data: {}
    service: telegram_bot.send_message
    data_template:
      title: "üéâ *–°–æ–æ–±—â–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã*"
      message: >
        ‚ö†  –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ –æ–±—ä—ë–º–∞ –¥–∏—Å–∫–∞ {{ states('sensor.disk_use_percent') }}
    
- alias: "004_System_Memory_usage_alarm"
  description: "–¢—Ä–µ–≤–æ–≥–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ø–æ—Ä–æ–≥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏"
  trigger:
    platform: numeric_state
    entity_id: sensor.memory_use_percent
    above: 70
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.control_mode
    state: 'on'
  action:
  - data: {}
    service: telegram_bot.send_message
    data_template:
      title: "üéâ *–°–æ–æ–±—â–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã*"
      message: >
        ‚ö†  –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ –æ–±—ä—ë–º–∞ –ø–∞–º—è—Ç–∏ {{ states('sensor.date_time') }}
    
- alias: "004_Purge_Database"
  description: "–û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
  initial_state: True
  trigger:
      platform: time
      at: '02:22:22'
  action:
      service: recorder.purge
      data:
        keep_days: 3
        repack: true

- alias: "004_Zigbee_Bridge_state_change"
  description: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–≤—è–∑–∏ —Å Zigbee –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–º"
  trigger:
  - platform: state
    entity_id: binary_sensor.zigbee2mqtt_bridge_connection_state
    from: online
    to: offline
  - platform: state
    entity_id: binary_sensor.zigbee2mqtt_bridge_connection_state
    from: offline
    to: online
  - platform: state
    entity_id: binary_sensor.zigbee2mqtt_bridge_connection_state_2
    from: online
    to: offline
  - platform: state
    entity_id: binary_sensor.zigbee2mqtt_bridge_connection_state_2
    from: offline
    to: online
  condition:
  - condition: state
    entity_id: input_boolean.control_mode
    state: 'on'
  action:
  - service: telegram_bot.send_message
    data_template:
      title: "üéâ *–°–æ–æ–±—â–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã*"
      message: >
        {% if trigger.to_state.state == 'offline' %}
          ‚ö† –ü–æ—Ç–µ—Ä—è–Ω–∞ —Å–≤—è–∑—å —Å Zigbee –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–º {{ states('sensor.date_time') }}
        {% elif trigger.to_state.state == 'online' %}
          ‚ö† –°–≤—è–∑—å —Å Zigbee –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ {{ states('sensor.date_time') }}
        {% endif %}
  - delay: 00:00:30
  - service: telegram_bot.delete_message
    data:
      chat_id: !secret telegram_bot_allowed_chat_id1
      message_id: last


# - alias: "004_Zigbee_Bridge_state_offline"
#   description: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ—Ç–µ—Ä–µ —Å–≤—è–∑–∏ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–º"
#   trigger:
#   - entity_id: binary_sensor.zigbee2mqtt_bridge_connection_state
#     from: online
#     platform: state
#     to: offline
#   - entity_id: binary_sensor.zigbee2mqtt_bridge_connection_state_2
#     from: online
#     platform: state
#     to: offline    
#   condition:
#   - condition: state
#     entity_id: input_boolean.control_mode
#     state: 'on'
#   action:
#   - data: {}
#     service: telegram_bot.send_message
#     data_template:
#       title: '*–û–ü–û–í–ï–©–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´:*'
#       message: >
#         ‚ö†  –ü–æ—Ç–µ—Ä—è–Ω–∞ —Å–≤—è–∑—å —Å Zigbee –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–º {{ states('sensor.date_time') }}
        
# - alias: "004_Zigbee_Bridge_state_online"
#   description: '–û—Ç–ø—Ä–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–≤—è–∑–∏ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–º.'
#   trigger:
#   - entity_id: binary_sensor.zigbee2mqtt_bridge_connection_state
#     from: offline
#     platform: state
#     to: online
#   - entity_id: binary_sensor.zigbee2mqtt_bridge_connection_state_2
#     from: offline
#     platform: state
#     to: online
#   condition:
#   - condition: state
#     entity_id: input_boolean.control_mode
#     state: 'on'
#   action:
#   - data: {}
#     service: telegram_bot.send_message
#     data_template:
#       title: '*–û–ü–û–í–ï–©–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´:*'
#       message: >
#         ‚ö†  C–≤—è–∑—å —Å Zigbee –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–º  –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ {{ states('sensor.date_time') }}

- alias: "004_Zigbee_unhealthy_alert"
  description: '–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ z2m'
  trigger:
  - platform: state
    entity_id: binary_sensor.z2m_health
    to: 'on'
  - platform: time
    at: '08:00:00'
  - platform: time
    at: '20:00:00'
  condition:
  - condition: state
    entity_id: input_boolean.control_mode
    state: 'on'
  action:
  - data: {}
    service: telegram_bot.send_message
    data_template:
      message: |-
        ‚ùå Zigbee last seen ‚ùåÔ∏è:  
        {{"*"}}{{state_attr('binary_sensor.z2m_health', 'data')}}{{"*: "}}
        
- alias: "004_Zigbee_Device_Missing_Alert"
  description: "–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö"
  trigger:
      - platform: time
        at: '07:00'
      - platform: time
        at: '16:00'
  condition:
      - condition: template
        value_template: |
          {% set ns = namespace(break = false) %} {% for state in states -%}
            {%- if state.attributes.last_seen %}
              {%- if (as_timestamp(now()) - as_timestamp(state.attributes.last_seen) > (60 * 60 * 20) ) and ns.break == false %}
                {%- set ns.break = true %}
                true
              {%- endif -%}
            {%- endif -%}
          {%- endfor %} 
  action:
      - service: telegram_bot.send_message
        data:
          message: >
            Some Zigbee devices haven't been seen lately... {% for state in states
            -%}
              {%- if (state.attributes.last_seen and not (state.name | regex_search('available|linkquality|power_on_behavior|state'))) %}
                {%- if (as_timestamp(now()) - as_timestamp(state.attributes.last_seen) > (60 * 60 * 20) ) %}
                  {{ ((as_timestamp(now()) - as_timestamp(state.attributes.last_seen)) / (3600)) | round(1) }} hours ago for {{"*"}}{{ state.name }}{{"*"}}
                  
                {%- endif -%}
              {%- endif -%}
            {%- endfor %}
  mode: single

- alias: "004_internet_ping_lost_rtk"
  description: "–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –†–¢–ö"
  trigger:
  - type: not_connected
    device_id: b4ce8ca81cf37628ca2110c0df3b97b7
    entity_id: 607a9a7da223513d6062b2f299a71bb1
    domain: binary_sensor
    trigger: device
    for:
      hours: 0
      minutes: 0
      seconds: 10
  condition:
  - condition: state
    entity_id: input_boolean.control_mode
    state: 'on'
  action:
  - data: {}
    service: telegram_bot.send_message
    data_template:
      title: "üéâ *–°–æ–æ–±—â–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã*" 
      message: >
        ‚ùå –ü–æ—Ç–µ—Ä—è–Ω–∞ —Å–≤—è–∑—å —Å –†–¢–ö 
      
- alias: "004_internet_ping_available_rtk"
  description: "–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –≤–æ—Å—Å—Ç–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –†–¢–ö"
  trigger:
  - type: connected
    device_id: b4ce8ca81cf37628ca2110c0df3b97b7
    entity_id: 607a9a7da223513d6062b2f299a71bb1
    domain: binary_sensor
    trigger: device
    for:
      hours: 0
      minutes: 0
      seconds: 10
  condition:
  - condition: state
    entity_id: input_boolean.control_mode
    state: 'on'
  action:
  - data: {}
    service: telegram_bot.send_message
    data_template:
      title: "üéâ *–°–æ–æ–±—â–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã*" 
      message: >
        ‚úÖ C–≤—è–∑—å —Å –†–¢–ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ 

- alias: "The camera on the 7th floor is unavailable"
  description: ''
  trigger:
  - type: not_connected
    platform: device
    device_id: 20e98bc5be4b8613732f00a06a0e4db7
    entity_id: 40cd5912aca5be9712a3a8150cafdc21
    domain: binary_sensor
  condition:
  - condition: state
    entity_id: input_boolean.control_mode
    state: 'on'
  action:
  - data: {}
    service: telegram_bot.send_message
    data_template:
      title: "üéâ *–°–æ–æ–±—â–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã*" 
      message: >
        ‚ö†  –ü–æ—Ç–µ—Ä—è–Ω–∞ —Å–≤—è–∑—å —Å –∫–∞–º–µ—Ä–æ–π –Ω–∞ 7 —ç—Ç–∞–∂–µ {{ states('sensor.date_time') }}

- alias: "The camera on the 7th floor is available"
  description: ''
  trigger:
  - type: connected
    platform: device
    device_id: 20e98bc5be4b8613732f00a06a0e4db7
    entity_id: 40cd5912aca5be9712a3a8150cafdc21
    domain: binary_sensor
  condition:
  - condition: state
    entity_id: input_boolean.control_mode
    state: 'on'
  action:
  - data: {}
    service: telegram_bot.send_message
    data_template:
      title: "üéâ *–°–æ–æ–±—â–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã*" 
      message: >
        üëç  –°–≤—è–∑—å —Å –∫–∞–º–µ—Ä–æ–π –Ω–∞ 7 —ç—Ç–∞–∂–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ {{ states('sensor.date_time') }}

- alias: "004_Torrent_Completed"
  trigger:
  - type: value
    platform: device
    device_id: 9fe90303300721798204a27de18b6855
    entity_id: ac81c608d6277c377994b65f16852fcd
    domain: sensor
    below: 0
  condition:
    - condition: state
      entity_id: input_boolean.control_mode
      state: 'on'
  action:
    service: telegram_bot.send_message
    data_template:
        title: "üéâ *–°–æ–æ–±—â–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã*" 
        message: "–ó–∞–≥—Ä—É–∑–∫–∞ torrent-—Ñ–∞–π–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

- alias: "004_–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ"
  trigger:
    platform: state
    entity_id: sensor.moon_phase
    to: "full_moon"
  condition:
    - condition: state
      entity_id: input_boolean.control_mode
      state: 'on'
  action:
    service: telegram_bot.send_message
    data_template:
        title: "üéâ *–°–æ–æ–±—â–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã*" 
        message: "–°–µ–≥–æ–¥–Ω—è –ø–æ–ª–Ω–æ–ª—É–Ω–∏–µ!"
      
- alias: "004_HACS:_New_Component_Version_Available"
  trigger:
    platform: state
    entity_id: sensor.hacs
  condition:
    - condition: template
      value_template: "{{ (states('sensor.hacs') | int) > 0 }}"
  action:
    service: telegram_bot.send_message
    data_template:
      message: |
        _INFO:_ –î–æ—Å—Ç—É–ø–Ω—ã –Ω–æ–≤—ã–µ –≤–µ—Ä—Å–∏–∏ Custom Components (HACS) ({{ states('sensor.hacs') }}):
        {%- for repo in state_attr('sensor.hacs', 'repositories') %}
        {{ repo.display_name }} (_{{ repo.installed_version }}_ -> _{{ repo.available_version }}_){% if not loop.last %}, {% endif %}
        {%- endfor -%}

- alias: "004_HASSIO:_New_Home_Assistant_Version_Available"
  description: ''
  trigger:
  - type: update
    platform: device
    device_id: 19d4d960bd60e915e329874140bcf74e
    entity_id: 58a102ffa5bc377876118d59b4698200
    domain: binary_sensor
  condition: 
    - condition: state
      entity_id: input_boolean.control_mode
      state: 'on'
  action:
    - service: telegram_bot.send_message
      data_template:
        message: "_INFO:_ –î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è Home Assistant ({{ state_attr('binary_sensor.home_assistant_versions_update_available') }})"





        




