- alias: "004_System_CPU_Temperature_alarm"
  description: "–¢—Ä–µ–≤–æ–≥–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –¶–ü–£"
  trigger:
  - entity_id: sensor.cpu_temp
    for: 00:05:00
    platform: state
    to: '60'
  condition: []
  action:
  - data: {}
    service: telegram_bot.send_message
    data_template:
      title: '*–û–ü–û–í–ï–©–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´:*'
      message: >
        ‚ö†  –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ {{ states('sensor.date_time') }}

- alias: "004_Purge_Database"
  description: "–û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
  initial_state: True
  trigger:
      platform: time
      at: '02:22:22'
  action:
      service: recorder.purge
      data:
        keep_days: 3
        repack: true

- alias: "004_Zigbee_Bridge_state_offline"
  description: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ—Ç–µ—Ä–µ —Å–≤—è–∑–∏ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–º"
  trigger:
  - entity_id: sensor.bridge_state
    from: online
    platform: state
    to: offline
  condition: []
  action:
  - data: {}
    service: telegram_bot.send_message
    data_template:
      title: '*–û–ü–û–í–ï–©–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´:*'
      message: >
        ‚ö†  –ü–æ—Ç–µ—Ä—è–Ω–∞ —Å–≤—è–∑—å —Å Zigbee –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–º {{ states('sensor.date_time') }}
        
- alias: "004_Zigbee_Bridge_state_online"
  description: ''
  trigger:
  - entity_id: sensor.bridge_state
    from: offline
    platform: state
    to: online
  condition: []
  action:
  - data: {}
    service: telegram_bot.send_message
    data_template:
      title: '*–û–ü–û–í–ï–©–ï–ù–ò–ï –°–ò–°–¢–ï–ú–´:*'
      message: >
        ‚ö†  C–≤—è–∑—å —Å Zigbee –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–º  –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ {{ states('sensor.date_time') }}

- alias: "004_Zigbee_unhealthy_alert"
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.z2m_health
    to: 'on'
  - platform: time
    at: '08:00:00'
  - platform: time
    at: '20:00:00'
  condition: []
  action:
  - data: {}
    service: telegram_bot.send_message
    data_template:
      message: |-
        ‚ùå Zigbee last seen ‚ùåÔ∏è:  
        {{"*"}}{{state_attr('binary_sensor.z2m_health', 'data')}}{{"*: "}}
        
- alias: "004_Zigbee_Device_Missing_Alert"
  trigger:
      - platform: time
        at: '07:00'
      - platform: time
        at: '16:00'
  condition:
      - condition: template
        value_template: |
          {% set ns = namespace(break = false) %} {% for state in states -%}
            {%- if state.attributes.last_seen %}
              {%- if (as_timestamp(now()) - as_timestamp(state.attributes.last_seen) > (60 * 60 * 20) ) and ns.break == false %}
                {%- set ns.break = true %}
                true
              {%- endif -%}
            {%- endif -%}
          {%- endfor %} 
  action:
      - service: telegram_bot.send_message
        data:
          message: >
            Some Zigbee devices haven't been seen lately... {% for state in states
            -%}
              {%- if (state.attributes.last_seen and not (state.name | regex_search('available|linkquality|power_on_behavior|state'))) %}
                {%- if (as_timestamp(now()) - as_timestamp(state.attributes.last_seen) > (60 * 60 * 20) ) %}
                  {{ ((as_timestamp(now()) - as_timestamp(state.attributes.last_seen)) / (3600)) | round(1) }} hours ago for {{"*"}}{{ state.name }}{{"*"}}
                  
                {%- endif -%}
              {%- endif -%}
            {%- endfor %}
  mode: single

- alias: "004_internet_ping_lost"
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.internet_is_available
    from: 'on'
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.control_mode
    state: 'on'
  action:
  - data: {}
    service: telegram_bot.send_message
    data_template:
      title: "*Problem with Internet!* ‚ö†Ô∏è"
      message: >
        ‚ö†  –ü–æ—Ç–µ—Ä—è–Ω–∞ —Å–≤—è–∑—å —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º {{ states('sensor.date_time') }}
        
- alias: "004_internet_ping_available"
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.internet_is_available
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.control_mode
    state: 'on'
  action:
  - data: {}
    service: telegram_bot.send_message
    data_template:
      title: "*Problem with Internet!* ‚ö†Ô∏è"
      message: >
        üëç  C–≤—è–∑—å —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ {{ states('sensor.date_time') }}